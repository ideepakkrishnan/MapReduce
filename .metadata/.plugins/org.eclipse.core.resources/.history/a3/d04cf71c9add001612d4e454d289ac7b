/**
 * 
 */
package com.neu.pdp.calculators;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.neu.pdp.Util;

/**
 * @author ideepakkrishnan
 *
 */
public class NoLockCalculator implements Runnable {
	
	private static final Logger logger = LogManager.getLogger(
			Util.class.getName());
	
	private Thread t;
	private String threadName;
	private static HashMap<String, List<Integer>> hmTmaxByStationId;
	
	NoLockCalculator(String name, List<String> lstWeatherData) {
		threadName = name;
		hmTmaxByStationId = new HashMap<String, List<Integer>>();
		logger.info("Creating thread: " + name);
	}
	
	/**
	 * Filters out the TMAX readings, groups them by station id and
	 * returns this data as a HashMap
	 * @param lstWeatherData List of String-s where each entry is
	 * in the format: station id, date, observation type, observation
	 * value, observation time
	 * @return A HashMap with station id as the key and a List of
	 * Integer-s that represent the TMAX readings for the station
	 * as value
	 */
	private void groupTMaxReadingsByStation(
			List<String> lstWeatherData) {
		logger.info("Entering groupTMaxReadingsByStation method");
		
		// Local variables
		String[] strArrData;		
		
		// Iterate through the list of Strings and process each one
		for (String strCurrReading: lstWeatherData) {
			strArrData = strCurrReading.split(",");
			
			// The array follows the format:
			// [station id, date, observation type, observation
			//  value, observation time]
			
			if (strArrData[2].equals("TMAX") && 
					!strArrData[3].isEmpty()) {
				// Check if the station id already exists in the
				// HashMap
				if (hmFilteredData.containsKey(strArrData[0])) {
					// Add the current TMAX reading into the list
					hmFilteredData.get(strArrData[0]).add(
							Integer.parseInt(strArrData[3]));
				} else {
					// We need to initialize a new key-value pair
					// for this new station
					hmFilteredData.put(
							strArrData[0], 
							new ArrayList<Integer>(Arrays.asList(
									Integer.parseInt(strArrData[3]))));
				}
			}
		}
		
		logger.info("Returning from getTMaxReadingsByStation method");
		return hmFilteredData;
	}

	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	public void start() {
		logger.info("Starting thread: " + threadName);
		if (t == null) {
			t = new Thread(this, threadName);
			t.start();
		}
	}

}
