/**
 * 
 */
package com.neu.pdp.withCombiner;

import java.io.IOException;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import com.neu.pdp.resources.IntPair;
import com.neu.pdp.resources.MaxReading;
import com.neu.pdp.resources.MinReading;

/**
 * Reads each line from an input file and fetches the 
 * @author ideepakkrishnan
 *
 */
public class TokenizerMapper extends Mapper<Object, Text, Text, IntPair> {
	
	private Text stationId = new Text();
	private IntPair pair = null;
    
    public void map(Object key, Text value, Context context
                    ) throws IOException, InterruptedException {
    	String values[] = value.toString().split(",");
        stationId.set(values[0]);
	    if (values[2].equals("TMIN")) {
		    pair = new MinReading();
	    } else if (values[2].equals("TMAX")) {
		    pair = new MaxReading();
	    }
	  
	    if (pair != null) {
	    	// Record the temperature and count
	    	pair.set(Integer.parseInt(values[3]), 1);
	    	
    	    context.write(stationId, (IntPair)pair);
	    }
	    
	    pair = null;
    }
    
}
